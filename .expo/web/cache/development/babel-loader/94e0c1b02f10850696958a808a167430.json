{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dienul Haq\\\\Desktop\\\\DUMBWAYS\\\\B30\\\\STAGE 2\\\\WEEK5\\\\reactNative-advance-template\\\\App.js\";\nimport \"react-native-gesture-handler\";\nimport * as React from \"react\";\nimport \"react-native-gesture-handler\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { CountProvider } from \"./src/context/Count\";\nimport { NativeBaseProvider, extendTheme } from \"native-base\";\nimport AppLoading from \"expo-app-loading\";\nimport { useFonts, BalsamiqSans_400Regular, BalsamiqSans_400Regular_Italic } from \"@expo-google-fonts/balsamiq-sans\";\nimport Container from \"./Container\";\nexport default function App() {\n  var _useFonts = useFonts({\n    BalsamiqSans_400Regular: BalsamiqSans_400Regular,\n    BalsamiqSans_400Regular_Italic: BalsamiqSans_400Regular_Italic\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  var fontConfig = {\n    BalsamiqSans: {\n      400: {\n        normal: \"BalsamiqSans_400Regular\",\n        italic: \"BalsamiqSans_400Regular_Italic\"\n      }\n    }\n  };\n  var customeColor = {\n    primary: {\n      50: \"#E3F2F9\",\n      100: \"#C5E4F3\",\n      200: \"#A2D4EC\",\n      300: \"#7AC1E4\",\n      400: \"#47A9DA\",\n      500: \"#0088CC\",\n      600: \"#007AB8\",\n      700: \"#006BA1\",\n      800: \"#005885\",\n      900: \"#003F5E\"\n    },\n    amber: {\n      400: \"#d97706\"\n    }\n  };\n  var theme = extendTheme({\n    colors: customeColor,\n    fontConfig: fontConfig,\n    fonts: {\n      heading: \"BalsamiqSans\",\n      body: \"BalsamiqSans\",\n      mono: \"BalsamiqSans\"\n    },\n    config: {\n      initialColorMode: \"dark\"\n    }\n  });\n\n  if (!fontsLoaded) {\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 12\n      }\n    });\n  } else {\n    return React.createElement(SafeAreaView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, React.createElement(NativeBaseProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    })), React.createElement(CountProvider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: {\n        backgroundColor: \"#202020\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, React.createElement(StatusBar, {\n      backgroundColor: \"#202020\",\n      barStyle: \"light-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }), React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }))));\n  }\n}","map":{"version":3,"sources":["C:/Users/Dienul Haq/Desktop/DUMBWAYS/B30/STAGE 2/WEEK5/reactNative-advance-template/App.js"],"names":["React","CountProvider","NativeBaseProvider","extendTheme","AppLoading","useFonts","BalsamiqSans_400Regular","BalsamiqSans_400Regular_Italic","Container","App","fontsLoaded","fontConfig","BalsamiqSans","normal","italic","customeColor","primary","amber","theme","colors","fonts","heading","body","mono","config","initialColorMode","backgroundColor","height"],"mappings":";;AACA,OAAO,8BAAP;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,8BAAP;;;;AAGA,SAASC,aAAT;AAGA,SAASC,kBAAT,EAA6BC,WAA7B,QAAgD,aAAhD;AAGA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SACEC,QADF,EAEEC,uBAFF,EAGEC,8BAHF,QAIO,kCAJP;AAOA,OAAOC,SAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAE5B,kBAAoBJ,QAAQ,CAAC;AAC3BC,IAAAA,uBAAuB,EAAvBA,uBAD2B;AAE3BC,IAAAA,8BAA8B,EAA9BA;AAF2B,GAAD,CAA5B;AAAA;AAAA,MAAKG,WAAL;;AAMA,MAAMC,UAAU,GAAG;AACjBC,IAAAA,YAAY,EAAE;AACZ,WAAK;AACHC,QAAAA,MAAM,EAAE,yBADL;AAEHC,QAAAA,MAAM,EAAE;AAFL;AADO;AADG,GAAnB;AAUA,MAAMC,YAAY,GAAG;AACnBC,IAAAA,OAAO,EAAE;AACP,UAAI,SADG;AAEP,WAAK,SAFE;AAGP,WAAK,SAHE;AAIP,WAAK,SAJE;AAKP,WAAK,SALE;AAMP,WAAK,SANE;AAOP,WAAK,SAPE;AAQP,WAAK,SARE;AASP,WAAK,SATE;AAUP,WAAK;AAVE,KADU;AAanBC,IAAAA,KAAK,EAAE;AACL,WAAK;AADA;AAbY,GAArB;AAmBA,MAAMC,KAAK,GAAGf,WAAW,CAAC;AACxBgB,IAAAA,MAAM,EAAEJ,YADgB;AAExBJ,IAAAA,UAAU,EAAVA,UAFwB;AAGxBS,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,cADJ;AAELC,MAAAA,IAAI,EAAE,cAFD;AAGLC,MAAAA,IAAI,EAAE;AAHD,KAHiB;AAQxBC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,gBAAgB,EAAE;AAApB;AARgB,GAAD,CAAzB;;AAWA,MAAI,CAACf,WAAL,EAAkB;AAChB,WAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAEO;AACL,WACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,kBAAD;AAAoB,MAAA,KAAK,EAAEQ,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAKE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEQ,QAAAA,eAAe,EAAE,SAAnB;AAA8BC,QAAAA,MAAM,EAAE;AAAtC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,eAAe,EAAC,SAA3B;AAAqC,MAAA,QAAQ,EAAC,eAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CALF,CADF;AAcD;AACF","sourcesContent":["//Import React Native Gesture Handler\r\nimport \"react-native-gesture-handler\";\r\n\r\nimport * as React from \"react\";\r\nimport \"react-native-gesture-handler\";\r\nimport { View, SafeAreaView } from \"react-native\";\r\nimport { StatusBar } from \"react-native\";\r\nimport { CountProvider } from \"./src/context/Count\";\r\n\r\n// Import 'NativeBaseProvider' component\r\nimport { NativeBaseProvider, extendTheme } from \"native-base\";\r\n\r\n// Import font with Expo\r\nimport AppLoading from \"expo-app-loading\";\r\nimport {\r\n  useFonts,\r\n  BalsamiqSans_400Regular,\r\n  BalsamiqSans_400Regular_Italic,\r\n} from \"@expo-google-fonts/balsamiq-sans\";\r\n\r\n// Import Container\r\nimport Container from \"./Container\";\r\n\r\nexport default function App() {\r\n  // Load Font with Expo\r\n  let [fontsLoaded] = useFonts({\r\n    BalsamiqSans_400Regular,\r\n    BalsamiqSans_400Regular_Italic,\r\n  });\r\n\r\n  // Setup Font\r\n  const fontConfig = {\r\n    BalsamiqSans: {\r\n      400: {\r\n        normal: \"BalsamiqSans_400Regular\",\r\n        italic: \"BalsamiqSans_400Regular_Italic\",\r\n      },\r\n    },\r\n  };\r\n\r\n  // Setup Custome Theme\r\n  const customeColor = {\r\n    primary: {\r\n      50: \"#E3F2F9\",\r\n      100: \"#C5E4F3\",\r\n      200: \"#A2D4EC\",\r\n      300: \"#7AC1E4\",\r\n      400: \"#47A9DA\",\r\n      500: \"#0088CC\",\r\n      600: \"#007AB8\",\r\n      700: \"#006BA1\",\r\n      800: \"#005885\",\r\n      900: \"#003F5E\",\r\n    },\r\n    amber: {\r\n      400: \"#d97706\",\r\n    },\r\n  };\r\n\r\n  // Configuration Native Base Custom Theme\r\n  const theme = extendTheme({\r\n    colors: customeColor,\r\n    fontConfig,\r\n    fonts: {\r\n      heading: \"BalsamiqSans\",\r\n      body: \"BalsamiqSans\",\r\n      mono: \"BalsamiqSans\",\r\n    },\r\n    config: { initialColorMode: \"dark\" },\r\n  });\r\n\r\n  if (!fontsLoaded) {\r\n    return <AppLoading />;\r\n  } else {\r\n    return (\r\n      <SafeAreaView>\r\n        <NativeBaseProvider theme={theme}>\r\n          <Container />\r\n        </NativeBaseProvider>\r\n\r\n        <CountProvider>\r\n          <View style={{ backgroundColor: \"#202020\", height: \"100%\" }}>\r\n            <StatusBar backgroundColor=\"#202020\" barStyle=\"light-content\" />\r\n            <Container />\r\n          </View>\r\n        </CountProvider>\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}